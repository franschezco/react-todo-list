{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Downloads\\\\react-todo-list-main\\\\react-todo-list-main\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport \"./App.css\";\nimport { TaskCreator } from \"./components/TaskCreator\";\nimport { useState, useEffect } from \"react\";\nimport { TaskTable } from \"./components/TaskTable\";\nimport { VisibilityControl } from \"./components/VisibilityControl\";\nimport { Container } from \"./components/Container\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [tasksItems, setTaskItems] = useState([]);\n  const [showCompleted, setShowCompleted] = useState(false);\n  function createTask(taskName) {\n    if (!tasksItems.find(task => task.name === taskName)) {\n      setTaskItems([...tasksItems, {\n        name: taskName,\n        done: false\n      }]);\n    } else {\n      alert(\"The task already exist\");\n    }\n  }\n  const toggleTask = task => {\n    setTaskItems(tasksItems.map(t => t.name === task.name ? {\n      ...t,\n      done: !t.done\n    } : t));\n  };\n  useEffect(() => {\n    let data = localStorage.getItem(\"tasks\");\n    if (data) {\n      setTaskItems(JSON.parse(data));\n    }\n  }, []);\n  const cleanTasks = () => {\n    setTaskItems(tasksItems.filter(task => !task.done));\n    setShowCompleted(false);\n  };\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasksItems));\n  }, [tasksItems]);\n  return /*#__PURE__*/_jsxDEV(\"main\", {\n    className: \"bg-dark vh-100 text-white\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(TaskCreator, {\n        createTask: createTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TaskTable, {\n        tasks: tasksItems,\n        toggleTask: toggleTask\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(VisibilityControl, {\n        setShowCompleted: checked => setShowCompleted(checked),\n        cleanTasks: cleanTasks,\n        isChecked: showCompleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), showCompleted === true && /*#__PURE__*/_jsxDEV(TaskTable, {\n        tasks: tasksItems,\n        toggleTask: toggleTask,\n        showCompleted: showCompleted\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"Zy9yG27tpiFo2ayxCuSMIkzD1yQ=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["TaskCreator","useState","useEffect","TaskTable","VisibilityControl","Container","App","tasksItems","setTaskItems","showCompleted","setShowCompleted","createTask","taskName","find","task","name","done","alert","toggleTask","map","t","data","localStorage","getItem","JSON","parse","cleanTasks","filter","setItem","stringify","checked"],"sources":["C:/Users/USER/Downloads/react-todo-list-main/react-todo-list-main/src/App.js"],"sourcesContent":["import \"./App.css\";\nimport { TaskCreator } from \"./components/TaskCreator\";\nimport { useState, useEffect } from \"react\";\nimport { TaskTable } from \"./components/TaskTable\";\nimport { VisibilityControl } from \"./components/VisibilityControl\";\nimport {Container} from \"./components/Container\";\n\nfunction App() {\n  const [tasksItems, setTaskItems] = useState([]);\n  const [showCompleted, setShowCompleted] = useState(false);\n\n  function createTask(taskName) {\n    if (!tasksItems.find((task) => task.name === taskName)) {\n      setTaskItems([...tasksItems, { name: taskName, done: false }]);\n    } else {\n      alert(\"The task already exist\");\n    }\n  }\n\n  const toggleTask = (task) => {\n    setTaskItems(\n      tasksItems.map((t) =>\n        t.name === task.name ? { ...t, done: !t.done } : t\n      )\n    );\n  };\n\n  useEffect(() => {\n    let data = localStorage.getItem(\"tasks\");\n    if (data) {\n      setTaskItems(JSON.parse(data));\n    }\n  }, []);\n\n  const cleanTasks = () => {\n    setTaskItems(tasksItems.filter(task => !task.done));   \n    setShowCompleted(false);\n  }\n\n  useEffect(() => {\n    localStorage.setItem(\"tasks\", JSON.stringify(tasksItems));\n  }, [tasksItems]);\n\n  return (\n    <main className=\"bg-dark vh-100 text-white\">\n      <Container>\n        <TaskCreator createTask={createTask} />\n        <TaskTable tasks={tasksItems} toggleTask={toggleTask} />\n        <VisibilityControl\n            setShowCompleted={(checked) => setShowCompleted(checked)}\n            cleanTasks={cleanTasks}\n            isChecked={showCompleted}\n        />\n\n        {showCompleted === true && (\n            <TaskTable\n                tasks={tasksItems}\n                toggleTask={toggleTask}\n                showCompleted={showCompleted}\n            />\n        )}\n      </Container>\n    </main>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,WAAW,QAAQ,0BAA0B;AACtD,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,SAASC,SAAS,QAAQ,wBAAwB;AAClD,SAASC,iBAAiB,QAAQ,gCAAgC;AAClE,SAAQC,SAAS,QAAO,wBAAwB;AAAC;AAEjD,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,UAAU,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,EAAE,CAAC;EAC/C,MAAM,CAACQ,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEzD,SAASU,UAAU,CAACC,QAAQ,EAAE;IAC5B,IAAI,CAACL,UAAU,CAACM,IAAI,CAAEC,IAAI,IAAKA,IAAI,CAACC,IAAI,KAAKH,QAAQ,CAAC,EAAE;MACtDJ,YAAY,CAAC,CAAC,GAAGD,UAAU,EAAE;QAAEQ,IAAI,EAAEH,QAAQ;QAAEI,IAAI,EAAE;MAAM,CAAC,CAAC,CAAC;IAChE,CAAC,MAAM;MACLC,KAAK,CAAC,wBAAwB,CAAC;IACjC;EACF;EAEA,MAAMC,UAAU,GAAIJ,IAAI,IAAK;IAC3BN,YAAY,CACVD,UAAU,CAACY,GAAG,CAAEC,CAAC,IACfA,CAAC,CAACL,IAAI,KAAKD,IAAI,CAACC,IAAI,GAAG;MAAE,GAAGK,CAAC;MAAEJ,IAAI,EAAE,CAACI,CAAC,CAACJ;IAAK,CAAC,GAAGI,CAAC,CACnD,CACF;EACH,CAAC;EAEDlB,SAAS,CAAC,MAAM;IACd,IAAImB,IAAI,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;IACxC,IAAIF,IAAI,EAAE;MACRb,YAAY,CAACgB,IAAI,CAACC,KAAK,CAACJ,IAAI,CAAC,CAAC;IAChC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMK,UAAU,GAAG,MAAM;IACvBlB,YAAY,CAACD,UAAU,CAACoB,MAAM,CAACb,IAAI,IAAI,CAACA,IAAI,CAACE,IAAI,CAAC,CAAC;IACnDN,gBAAgB,CAAC,KAAK,CAAC;EACzB,CAAC;EAEDR,SAAS,CAAC,MAAM;IACdoB,YAAY,CAACM,OAAO,CAAC,OAAO,EAAEJ,IAAI,CAACK,SAAS,CAACtB,UAAU,CAAC,CAAC;EAC3D,CAAC,EAAE,CAACA,UAAU,CAAC,CAAC;EAEhB,oBACE;IAAM,SAAS,EAAC,2BAA2B;IAAA,uBACzC,QAAC,SAAS;MAAA,wBACR,QAAC,WAAW;QAAC,UAAU,EAAEI;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACvC,QAAC,SAAS;QAAC,KAAK,EAAEJ,UAAW;QAAC,UAAU,EAAEW;MAAW;QAAA;QAAA;QAAA;MAAA,QAAG,eACxD,QAAC,iBAAiB;QACd,gBAAgB,EAAGY,OAAO,IAAKpB,gBAAgB,CAACoB,OAAO,CAAE;QACzD,UAAU,EAAEJ,UAAW;QACvB,SAAS,EAAEjB;MAAc;QAAA;QAAA;QAAA;MAAA,QAC3B,EAEDA,aAAa,KAAK,IAAI,iBACnB,QAAC,SAAS;QACN,KAAK,EAAEF,UAAW;QAClB,UAAU,EAAEW,UAAW;QACvB,aAAa,EAAET;MAAc;QAAA;QAAA;QAAA;MAAA,QAEpC;IAAA;MAAA;MAAA;MAAA;IAAA;EACS;IAAA;IAAA;IAAA;EAAA,QACP;AAEX;AAAC,GAzDQH,GAAG;AAAA,KAAHA,GAAG;AA2DZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module"}